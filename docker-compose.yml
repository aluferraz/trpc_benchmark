version: '3.3'
services:
  db:
    container_name: postgres
    # image: postgres
    build: 
      context: ./data
      dockerfile: Dockerfile
    # volumes:
    #   - ./data/db:/var/lib/postgresql/data
      # - ./data/EPA_SmartLocationDatabase_V3_Jan_2021_Final.csv:/tmp/EPA_SmartLocationDatabase_V3_Jan_2021_Final.csv
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 0.0.0.0:5432:5432
    healthcheck:
      test: ["CMD-SHELL", "sleep 30 && pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
  graphene:
    container_name: graphene
    build: 
      context: ./cookbook-plain
      dockerfile: Dockerfile
    command: "python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./cookbook-plain:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy

  flask-graphql:
    container_name: flask-graphql
    build: 
      context: ./flask-graphql
      dockerfile: Dockerfile
    ports:
      - "0.0.0.0:5000:5000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy
  nextjs:
    container_name: nextjs
    build: 
      context: ./geo_trpc
      dockerfile: Dockerfile
    # ports:
    #   - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
  apollo:
    container_name: apollo
    build: 
      context: ./apollo
      dockerfile: Dockerfile
    # ports:
    #   - "4000:4000"
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
  nginx-next:
    container_name: nginx-next
    image: nginx:latest
    volumes:
      - ./nginx-next.conf:/etc/nginx/nginx.conf:ro 
    ports:
      - "3000:3000"  
    depends_on:
      - nextjs
  nginx-apollo:
    container_name: nginx-apollo
    image: nginx:latest
    volumes:
      - ./nginx-apollo.conf:/etc/nginx/nginx.conf:ro 
    ports:
      - "4000:4000"  
    depends_on:
      - apollo
